<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.commonsl.dao.DeviceDao">

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.commonsl.model.Device">
		INSERT INTO DEVICE (
			ID, BLUETOOTH_ID, COMPANY_NAME, CREATE_TIME, DEVICE_ADDRESS, DEVICE_ID, DEVICE_NAME, DISTRICT, IP, IP_SET_STATIC, SSID, STATE, STATIC_GATEWAY, STATIC_IP, STATIC_SUBNET_MASK, USER_NAME, WIFI_PASSWORD
		) VALUES (
			#{id}, #{bluetoothId}, #{companyName}, #{createTime}, #{deviceAddress}, #{deviceId}, #{deviceName}, #{district}, #{ip}, #{ipSetStatic}, #{ssid}, #{state}, #{staticGateway}, #{staticIp}, #{staticSubnetMask}, #{userName}, #{wifiPassword}
		)
	</insert>

	<delete id="delete" parameterType="com.commonsl.model.Device">
		DELETE FROM DEVICE <include refid="CriteriaSQL" />
	</delete>

	<update id="update" parameterType="com.commonsl.model.Device">
		UPDATE DEVICE <include refid="SetSQL" /> <include refid="CriteriaSQL" />
	</update>
  
	<select id="selectCount" parameterType="com.commonsl.model.Device" resultType="_long">
		SELECT COUNT(1) FROM DEVICE <include refid="CriteriaSQL" />
	</select>

	<select id="selectList" parameterType="com.commonsl.model.Device" resultMap="DeviceResultMap">
		SELECT * FROM DEVICE <include refid="CriteriaSQL" /> <include refid="OrderbySQL" /> <include refid="LimitSQL" />
	</select>

	<resultMap id="DeviceResultMap" type="com.commonsl.model.Device">
		<id property="id" column="ID" />
		<result property="bluetoothId" column="BLUETOOTH_ID" />
		<result property="companyName" column="COMPANY_NAME" />
		<result property="createTime" column="CREATE_TIME" />
		<result property="deviceAddress" column="DEVICE_ADDRESS" />
		<result property="deviceId" column="DEVICE_ID" />
		<result property="deviceName" column="DEVICE_NAME" />
		<result property="district" column="DISTRICT" />
		<result property="ip" column="IP" />
		<result property="ipSetStatic" column="IP_SET_STATIC" />
		<result property="ssid" column="SSID" />
		<result property="state" column="STATE" />
		<result property="staticGateway" column="STATIC_GATEWAY" />
		<result property="staticIp" column="STATIC_IP" />
		<result property="staticSubnetMask" column="STATIC_SUBNET_MASK" />
		<result property="userName" column="USER_NAME" />
		<result property="wifiPassword" column="WIFI_PASSWORD" />
	</resultMap>

	<sql id="SetSQL">
		<set>
			<if test="entity.bluetoothId != null">BLUETOOTH_ID = #{entity.bluetoothId},</if>
			<if test="entity.companyName != null">COMPANY_NAME = #{entity.companyName},</if>
			<if test="entity.createTime != null">CREATE_TIME = #{entity.createTime},</if>
			<if test="entity.deviceAddress != null">DEVICE_ADDRESS = #{entity.deviceAddress},</if>
			<if test="entity.deviceId != null">DEVICE_ID = #{entity.deviceId},</if>
			<if test="entity.deviceName != null">DEVICE_NAME = #{entity.deviceName},</if>
			<if test="entity.district != null">DISTRICT = #{entity.district},</if>
			<if test="entity.ip != null">IP = #{entity.ip},</if>
			<if test="entity.ipSetStatic != null">IP_SET_STATIC = #{entity.ipSetStatic},</if>
			<if test="entity.ssid != null">SSID = #{entity.ssid},</if>
			<if test="entity.state != null">STATE = #{entity.state},</if>
			<if test="entity.staticGateway != null">STATIC_GATEWAY = #{entity.staticGateway},</if>
			<if test="entity.staticIp != null">STATIC_IP = #{entity.staticIp},</if>
			<if test="entity.staticSubnetMask != null">STATIC_SUBNET_MASK = #{entity.staticSubnetMask},</if>
			<if test="entity.userName != null">USER_NAME = #{entity.userName},</if>
			<if test="entity.wifiPassword != null">WIFI_PASSWORD = #{entity.wifiPassword},</if>
		</set>
	</sql>

	<sql id="CriteriaSQL">
		<where>
			<if test="criteria != null and criteria.notEmpty">
				<foreach collection="criteria.criterions" item="criterion">
					<choose>
						<when test="criterion.noValue">
							and ${criterion.field} ${criterion.condition}
						</when>
						<when test="criterion.singleValue">
							and ${criterion.field} ${criterion.condition} #{criterion.value}
						</when>
						<when test="criterion.betweenValue">
							and ${criterion.field} ${criterion.condition} #{criterion.value} and #{criterion.value2}
						</when>
						<when test="criterion.listValue">
							and ${criterion.field} ${criterion.condition}
							<foreach collection="criterion.value" item="item" open="(" separator="," close=")">
								#{item}
							</foreach>
						</when>
					</choose>
				</foreach>
			</if>
		</where>
	</sql>

	<sql id="OrderbySQL">
		<if test="criteria != null and criteria.orderly">
			ORDER BY 
			<foreach collection="criteria.orderbies" item="orderby" separator=",">
				${orderby.field} ${orderby.value}
			</foreach>
		</if>
	</sql>

	<sql id="LimitSQL">
		<if test="criteria != null and criteria.pagination">
			LIMIT #{criteria.limit.value}, #{criteria.limit.value2}
		</if>
	</sql>

</mapper>